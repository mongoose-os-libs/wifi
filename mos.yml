author: mongoose-os
description: WiFi support
type: lib
version: 1.0

platforms: [ cc3200, cc3220, esp32, esp8266 ]

sources:
  - src
includes:
  - include

config_schema:
  - ["wifi", "o", {hide: true}]

  - ["wifi.ap", "o", {title: "WiFi Access Point"}]
  - ["wifi.ap.enable", "b", true, {title: "Enable"}]
  - ["wifi.ap.ssid", "s", "Mongoose_??????", {title: "SSID"}]
  - ["wifi.ap.pass", "s", "Mongoose", {title: "Password", type: "password"}]
  - ["wifi.ap.hidden", "b", false, {title: "Hide SSID"}]
  - ["wifi.ap.channel", "i", 6, {title: "Channel"}]
  - ["wifi.ap.max_connections", "i", 10, {title: "Max connections"}]
  - ["wifi.ap.ip", "s", "192.168.4.1", {title: "IP address"}]
  - ["wifi.ap.netmask", "s", "255.255.255.0", {title: "Network Mask"}]
  - ["wifi.ap.gw", "s", "192.168.4.1", {title: "Default Gateway"}]
  - ["wifi.ap.dhcp_start", "s", "192.168.4.2", {title: "DHCP Start Address"}]
  - ["wifi.ap.dhcp_end", "s", "192.168.4.100", {title: "DHCP End Address"}]
  - ["wifi.ap.trigger_on_gpio", "i", -1, {title: "Trigger AP on low GPIO"}]
  - ["wifi.ap.disable_after", "i", 0, {title: "If > 0, will disable itself after the specified number of seconds"}]
  - ["wifi.ap.hostname", "s", "", {title: "If not empty, DNS server will resolve given host name to the IP address of AP"}]

  - ["wifi.sta", "o", {title: "WiFi Station"}]
  - ["wifi.sta.enable", "b", {title: "Connect to existing WiFi"}]
  - ["wifi.sta.ssid", "s", {title: "SSID"}]
  - ["wifi.sta.pass", "s", {title: "Password", type: "password"}]
  - ["wifi.sta.user", "s", {title: "Username for WPA-PEAP mode"}]
  - ["wifi.sta.anon_identity", "s", {title: "Anonymous identity for WPA mode"}]
  - ["wifi.sta.cert", "s", {title: "Client certificate for WPA-TTLS mode"}]
  - ["wifi.sta.key", "s", {title: "Client key for WPA-TTLS mode"}]
  - ["wifi.sta.ca_cert", "s", {title: "CA certificate for WPA-enterprise mode"}]
  - ["wifi.sta.ip", "s", {title: "Static IP Address"}]
  - ["wifi.sta.netmask", "s", {title: "Static Netmask"}]
  - ["wifi.sta.gw", "s", {title: "Static Default Gateway"}]
  - ["wifi.sta.nameserver", "s", {title: "DNS Server"}]
  - ["wifi.sta.dhcp_hostname", "s", {title: "Host name to include in DHCP requests"}]
  # Sections below are exact copies of the above section and are used to support multiple station configurations.
  - ["wifi.sta1", "o", {title: "WiFi Station"}]
  - ["wifi.sta1.enable", "b", {title: "Connect to existing WiFi"}]
  - ["wifi.sta1.ssid", "s", {title: "SSID"}]
  - ["wifi.sta1.pass", "s", {title: "Password", type: "password"}]
  - ["wifi.sta1.user", "s", {title: "Username for WPA-PEAP mode"}]
  - ["wifi.sta1.anon_identity", "s", {title: "Anonymous identity for WPA mode"}]
  - ["wifi.sta1.cert", "s", {title: "Client certificate for WPA-TTLS mode"}]
  - ["wifi.sta1.key", "s", {title: "Client key for WPA-TTLS mode"}]
  - ["wifi.sta1.ca_cert", "s", {title: "CA certificate for WPA-enterprise mode"}]
  - ["wifi.sta1.ip", "s", {title: "Static IP Address"}]
  - ["wifi.sta1.netmask", "s", {title: "Static Netmask"}]
  - ["wifi.sta1.gw", "s", {title: "Static Default Gateway"}]
  - ["wifi.sta1.nameserver", "s", {title: "DNS Server"}]
  - ["wifi.sta1.dhcp_hostname", "s", {title: "Host name to include in DHCP requests"}]
  - ["wifi.sta2", "o", {title: "WiFi Station"}]
  - ["wifi.sta2.enable", "b", {title: "Connect to existing WiFi"}]
  - ["wifi.sta2.ssid", "s", {title: "SSID"}]
  - ["wifi.sta2.pass", "s", {title: "Password", type: "password"}]
  - ["wifi.sta2.user", "s", {title: "Username for WPA-PEAP mode"}]
  - ["wifi.sta2.anon_identity", "s", {title: "Anonymous identity for WPA mode"}]
  - ["wifi.sta2.cert", "s", {title: "Client certificate for WPA-TTLS mode"}]
  - ["wifi.sta2.key", "s", {title: "Client key for WPA-TTLS mode"}]
  - ["wifi.sta2.ca_cert", "s", {title: "CA certificate for WPA-enterprise mode"}]
  - ["wifi.sta2.ip", "s", {title: "Static IP Address"}]
  - ["wifi.sta2.netmask", "s", {title: "Static Netmask"}]
  - ["wifi.sta2.gw", "s", {title: "Static Default Gateway"}]
  - ["wifi.sta2.nameserver", "s", {title: "DNS Server"}]
  - ["wifi.sta2.dhcp_hostname", "s", {title: "Host name to include in DHCP requests"}]
  # Station configurations will be tried starting from sta_cfg_idx and each one that is enabled
  # will be given sta_connect_timeout seconds to connect. Successfully connected station's index
  # will be saved in sta_cfg_idx so next boot will start with previously used configuration.
  # Setting sta_connect_timeout to 0 will disable this logic.
  - ["wifi.sta_cfg_idx", "i", 0, {title: "WiFi station config index to use, 0, 1 or 2"}]
  - ["wifi.sta_connect_timeout", "i", 30, {title: "Timeout for connection, seconds"}]

build_vars:
  MGOS_WIFI_ENABLE_AP_STA: 0

conds:
  - when: build_vars.MGOS_WIFI_ENABLE_AP_STA == "1"
    apply:
      config_schema:
        - ["wifi.ap.keep_enabled", "b", true, {title: "Keep AP enabled when station is on"}]
      cdefs:
        MGOS_WIFI_ENABLE_AP_STA: 1

cdefs:
  MG_ENABLE_DNS_SERVER: 1

tags:
  - c
  - net
  - wifi

manifest_version: 2017-09-29

# Temporary, while root manifest change propagates (2018/03/29).
libs:
  - origin: https://github.com/mongoose-os-libs/core
